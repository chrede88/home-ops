---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name gatus
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      gatus:
        replicas: 1
        strategy: RollingUpdate
        initContainers:
          gatus-sidecar:
            image:
              repository: ghcr.io/home-operations/gatus-sidecar
              tag: 0.0.6
            args:
              - --gateway=external-gateway
              - --auto-httproute=false
              - --auto-ingress=false
              - --auto-service=false
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            restartPolicy: Always
        containers:
          app:
            image:
              repository: twinproduction/gatus
              tag: v5.25.2
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8080
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
            resources:
              limits:
                cpu: 250m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 50Mi
            env:
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              GATUS_WEB_PORT: *port
            envFrom:
              - secretRef:
                  name: gatus-secret
        serviceAccount:
          identifier: *name
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    service:
      app:
        controller: *name
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: *name
        endpoints:
          - port: http
    serviceAccount:
      gatus: {}
    rbac:
      roles:
        gatus:
          type: ClusterRole
          rules:
            - apiGroups:
                - gateway.networking.k8s.io
              resources:
                - httproutes
                - gateways
              verbs:
                - get
                - watch
                - list
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            identifier: *name
          subjects:
            - identifier: *name
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
